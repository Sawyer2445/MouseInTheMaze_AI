<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>